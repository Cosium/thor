#!/usr/bin/env node
'use strict';

var async = require('async')
  , os = require('os');

//
// Setup the Command-Line Interface.
//
var cli = require('commander');

cli.option('-p, --port <portnumber>', 'the port number of the server', parseInt, 80)
   .option('-h, --host <hostname>', 'the host name of the server', 'localhost')
   .option('-a, --amount <connections>', 'the amount of persistent connections to generate', parseInt, 10000)
   .option('-c, --concurrent <connections>', 'how many concurrent-connections should we establish', parseInt, 100)
   .option('-b, --buffer <size>', 'size of the messages that are send', parseInt, 1024)
   .option('-w, --workers <cpus>', 'workers to be spawned', parseInt, os.cpus().length)
   .option('-s, --secure', 'establish a secure connection (wss://)')
   .version(require('../package.json').version)
   .parse(process.argv);

//
// By Odin's beard, unleash thunder!
//
var cluster = require('cluster')
  , workers = cli.workers;

cluster.setupMaster({ exec: '../thunderbolt.js', silent: true });
while (workers--) cluster.fork();

Object.keys(cluster.workers).forEach(function each(id) {
  var worker = cluster.workers[id];

  worker.on('message', function message(data) {
    switch (data.type) {
      case 'open':
      case 'close':
      case 'error':
      case 'message':
    }
  });
});

//
// Start.
//
var url = (cli.secure ? 'wss' : 'ws') +'://'+ cli.host +':'+ cli.port;
[
    ''
  , 'Thor:                                                  version: '+ cli._version
  , ''
  , 'God of Thunder, son of Odin and smasher of WebSockets!'
  , ''
  , 'Thou shall:'
  , '- Spawn '+ cli.workers +' workers.'
  , '- Create '+ cli.concurrent + ' concurrent connections.'
  , '- Smash '+ cli.amount +' connections with the mighty Mj√∂lnir.'
  , ''
  , 'Prepare to suffer, '+ url + ' thy infidel.'
].forEach(function stdout(line) {
  console.log(line);
});
